# K x K 인 상황에서 무조건 필요한 빨간색 종이의 갯수를 구하자
# 언제 발생하냐
# T는 무조건 필요한 빨간색 종이의 갯수
# K가 홀수일경우 무조건이라는 상황 발생
# 2x2 파란색 종이로는 3x3을 채울 수 없음 즉 무조건 빨간색종이 1x1짜리로 채워야한다
# 가장 오른쪽 줄과 가장 아래쪽 줄을 빨간색종이로 채운다면 2k-1개가 필요하다
# 즉 K가 홀수라면 T = 2K-1, 짝수라면 T = 0 => 짝수인경우 빨간색종이가 필요없다
# 그렇게 해서 홀수개인경우는 T = 2K-1의 빨간색 종이부분만큼만 빼고 짝수X짝수로 바꾸고 파란종이로 채우고
# 원래 짝수개는 즉 빨간색종이가 필요없는경우는 파란종이로 다 채우면된다
# 파란색종이를 최대한 많이 붙이는 것이 좋다 => 4칸이다
# 4xB칸을 덮을 수 있게 된다 2x2 = 4
# 1xR칸을 덮을 수 있게 된다 1x1 = 1
# 4 x B + 1 x R >= K^2(전체 칸의 갯수) 이다
# 가장 큰 정사각형은 어떻게 찾냐
# 가장 큰 넓이 정함
# 난 C = B x 4 + R x 1 (= 20이라면 )만큼 덮을 수 있을것같아
# 짝수넓이의 정사각형을 찾는다
#  K짝수 = [rootC] (가우스기호) => 4.xx가 된다
# k = 4일경우 가능하다 또 5x5가 가능한지 확인 6x6은 다 못덮음
# 5x5에서 빨간색 다 붙이고 나서도 4x4를 붙일 수 있는지 확인
# 물론 5x5 = 25라서 20개로는 안됨
# C = 26이라면
# B = 6 R = 2 라면 4X4는 당연히 채울 수 있다
# 5x5는 불가능 R=2이고 B=6이면
# 5x5는 가능 R = 26 B = 0 빨간색 9장 붙이고 짝수 4x4는 가능하다 나머지 빨간종이로 붙이면된다
import sys
from math import sqrt
si = sys.stdin.readline
R, B = map(int, si().split())
C = R * 1 + B * 4 # 기본 빨간종이 1칸단위 장착,  파란종이 4칸단위이 장착
# R이 2이고 B가 6이면 C는 26이되고
K_even = int(sqrt(C)) # 루트씌우면 5.xx가된다 => 5가됨  5x5는 채울수있음을 의미 그리고 그다음 6x6을 채울 수 있는가?
# 여기서 빨간종이로 가장 오른쪽줄과 가장 아래쪽줄을 채울 수 있다면 되는데 그다음
# 6x6의 빨간종이를 의무적으로 채워야하는 갯수 12-1 = 10 + 1 = 11이다 그것보다 빨간색종이가 작으면 채울 수 없다
# 그리고 6x6의 갯수보다 작으면 채울 수 없으므로 그대로 5x5로 결정한다
# 위의 조건을 다 만족한다면 채울 수 있으므로 6x6으로 결정한다
if K_even * 2 + 1 <= R and (K_even + 1) ** 2 <= C: # 즉 빨간종이
    print(K_even + 1)
else:
    print(K_even)