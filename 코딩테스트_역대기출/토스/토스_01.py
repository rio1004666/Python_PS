#  N 명의 사람이 잇음
# N = 8
# 각 사람들마다 번호가 있다
# 1번부터 N번 각사람마다 돈을 들고 있다
# 1번 : 10원 2번 : 8원 3번 : 5원
# 새로운 팀을 만들거다
# K명이 연속된 번호를 들고 있어야한다
# 이 팀의 가치는 사람들이 가지고 있는 돈이된다
# 특별한 조건 : 시너지 일으키는 사람이 있따
# S명의 사람들은 S명이 시너지를 일으킨다
# S = 3 시너지 : 2,3,5번사람이 모여있게되면

# 그 팀의 가치는 두배가 된다 !!!!!

# 팀을 3번부터 8번을 잡게되면 5명이되긴햇지만 시너지를 일으키는 2번 사람이 존재하지 않기때문에
# 그대로 그 가치를 가지게 된다
# 어떻게 K명의 연속되게 골라야 최대의 가치가 되게하는가?
# N값의 범위는 50만 K값의 범위는 N이하
# S의 범위는 N이하
# 각 사람이 가지고 있는 돈의 가치는 10억 이하이다.

# 시너지를 일으키는 사람이 없다고 풀게되면 어떻게 해야
# 최대가치가 되도록 연속된 K개를 더하는것을 구하는가
# 나이브 하게 구해본다
# 실제로 K명 다 더해보고 S로 시너지 를 가진 사람이 있는지 구해보므로
# O(NK) 가된다 => 1억보다 크다
# 그러면 나는 연속된 K개를 선택햇을때 어떻게 구하나
# 쉽게 할 수 있는 아이디어
# 내가 만약 i부터 j번까지의 합을 안다 => V라고 하면
# 다음으로 확인할 구간이 i+1~j+1까지다
# 잘 관찰해보면 이전에 알고 있던 구간과 이번에 궁금한 구간 사이의
# 데이터를 재활용 할 수 있지 않을까?
# 어차피 색칠된 구간의 합은 이전구간에도 똑같이 포함되어 있기때문에
# 새로구하는 구간의 합은 v - i번째사람돈 뻬고 + j+1번째 돈 더한다
# 이전 윈도우와 다음 윈도우사이의 값을 빠르게 구함 => 슬라이딩윈도우
# 이제 알 수 있게구나라는 것을 아는데 이제 시너지까지 알아야함
# 시너지를 일으키는 사람이 존재하는지 일일이 확인도 해야한다
# 이것도 나이브하게 접근하면 다 확인해야하므로 시간초과일어난다
# 만약 100번부터 20만번까지 사람들을 체크한다
# s가 500 200 190000 19999
# 구간이 연속적이다라는 사실을 활용하면 => 중요하다
# 가장 낮은번호랑 가장 높은번호가 팀에 있는지만 확인해주면된다
# 그 사이의 수들은 이미 속해잇다라고 생각할 수 잇다
# 즉 min max만 구해주면끝

# 완전탐색부터 생각하고
# 어떤 키워드에 대한 관찰 => 연속이 중요한 키워드이다 이 문제에선
# 시너지를 일으키는 전부 들어가야함 => 연속과 관계가 있을까??
# 문제에 힌트가 다 있다

import sys

si = sys.stdin.readline
N, K, S = map(int, si().split())
a = list(map(int, si().split()))
synergy = list(map(int,si().split()))
min_synergy ,max_synergy = min(synergy)-1, max(synergy)-1
ans = 0
cnt = sum(a[:K])
for start in range(N-K):
    end = start + K - 1
    # a[start...end]
    if start <= min_synergy and max_synergy <= end:
        ans = max(ans,cnt*2)
    else:
        ans = max(ans, cnt)
    cnt -= a[start]
    cnt += a[end + 1]
    if end + 1 < N:
        cnt += a[end + 1]
print(ans)